{"version":3,"file":"static/js/1269.f4783fed.chunk.js","mappings":"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","sources":["../node_modules/@ionic/core/dist/esm-es5/shadow-css-c63963b5.js"],"sourcesContent":["import { __spreadArrays } from \"tslib\";\n/*\n Stencil Client Platform v1.17.3 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content,\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks,\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n    var slotClass = '.' + slotScopeId + ' > ';\n    var selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var slottedSelector = slotClass + compound + suffix;\n            var prefixSelector = '';\n            for (var i = m[4] - 1; i >= 0; i--) {\n                var char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            var orgSelector = prefixSelector + slottedSelector;\n            var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                var updatedSelector = addedSelector + \", \" + orgSelector;\n                selectors.push({\n                    orgSelector: orgSelector,\n                    updatedSelector: updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors: selectors,\n        cssText: cssText,\n    };\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector\n        .split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content,\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    var slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(function (slottedSelector) {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\nexport { scopeCss };\n"],"names":["_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","_commentWithHashRe","_ruleRe","_curlyRe","BLOCK_PLACEHOLDER","processRules","input","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","replace","m","_i","arguments","length","selector","content","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","push","join","convertColonRule","cssText","regExp","partReplacer","parts","r","i","p","trim","colonHostPartReplacer","host","colonHostContextPartReplacer","indexOf","selectorNeedsScoping","scopeSelector","re","makeScopeMatcher","test","applyStrictSelectorScope","hostSelector","_","res","className","_scopeSelectorPart","scopedP","lastIndex","replaceBy_1","before","colon","after","applySimpleSelectorScope","t","matches","match","safeContent","placeholders","index","keep","replaceBy","pseudo","exp","safeSelector","scopedSelector","startIndex","sep","shouldScope","exec","separator","part_1","slice","scopeSelectors","scopeSelectorText","slotSelector","commentOriginalSelector","map","shallowPart","scopeCssText","scopeId","hostScopeId","slotScopeId","slotted","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonSlotted","convertColonHostContext","convertColonHost","reduce","result","pattern","convertShadowDOMSelectors","slottedSelectors","scopeCss","commentsWithHash","stripComments","orgSelectors","processCommentedSelector_1","placeholder","comment","scoped","__spreadArrays","forEach","_a"],"sourceRoot":""}