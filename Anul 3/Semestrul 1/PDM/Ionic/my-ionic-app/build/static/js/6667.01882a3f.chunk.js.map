{"version":3,"file":"static/js/6667.01882a3f.chunk.js","mappings":"2JAAA,IAAIA,EAAc,cAEdC,EAAa,CAAC,MAAO,YAAa,QAAS,SAAU,IAAK,QAAS,QAAS,YAAa,aAAc,WACvGC,EAAoB,WACpB,IAAIC,EAAe,GACfC,GAAe,EACfC,EAAMC,SACNC,EAAW,SAAUC,GACrBL,EAAaM,SAAQ,SAAUC,GAAM,OAAOA,EAAGC,UAAUC,OAAOZ,EAAc,IAC9EQ,EAASC,SAAQ,SAAUC,GAAM,OAAOA,EAAGC,UAAUE,IAAIb,EAAc,IACvEG,EAAeK,CACnB,EACIM,EAAc,WACdV,GAAe,EACfG,EAAS,GACb,EACAF,EAAIU,iBAAiB,WAAW,SAAUC,IACtCZ,EAAeH,EAAWgB,SAASD,EAAGE,OAElCX,EAAS,GAEjB,IACAF,EAAIU,iBAAiB,WAAW,SAAUC,GACtC,GAAIZ,GAAgBY,EAAGG,aAAc,CACjC,IAAIC,EAAUJ,EAAGG,eAAeE,QAAO,SAAUX,GAC7C,QAAIA,EAAGC,WACID,EAAGC,UAAUW,SAzBpB,gBA4BR,IACAf,EAASa,EACb,CACJ,IACAf,EAAIU,iBAAiB,YAAY,WACzBV,EAAIkB,gBAAkBlB,EAAImB,MAC1BjB,EAAS,GAEjB,IACAF,EAAIU,iBAAiB,aAAcD,GACnCT,EAAIU,iBAAiB,YAAaD,EACtC,C","sources":["../node_modules/@ionic/core/dist/esm-es5/focus-visible-15ada7f7.js"],"sourcesContent":["var ION_FOCUSED = 'ion-focused';\nvar ION_FOCUSABLE = 'ion-focusable';\nvar FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\nvar startFocusVisible = function () {\n    var currentFocus = [];\n    var keyboardMode = true;\n    var doc = document;\n    var setFocus = function (elements) {\n        currentFocus.forEach(function (el) { return el.classList.remove(ION_FOCUSED); });\n        elements.forEach(function (el) { return el.classList.add(ION_FOCUSED); });\n        currentFocus = elements;\n    };\n    var pointerDown = function () {\n        keyboardMode = false;\n        setFocus([]);\n    };\n    doc.addEventListener('keydown', function (ev) {\n        keyboardMode = FOCUS_KEYS.includes(ev.key);\n        if (!keyboardMode) {\n            setFocus([]);\n        }\n    });\n    doc.addEventListener('focusin', function (ev) {\n        if (keyboardMode && ev.composedPath) {\n            var toFocus = ev.composedPath().filter(function (el) {\n                if (el.classList) {\n                    return el.classList.contains(ION_FOCUSABLE);\n                }\n                return false;\n            });\n            setFocus(toFocus);\n        }\n    });\n    doc.addEventListener('focusout', function () {\n        if (doc.activeElement === doc.body) {\n            setFocus([]);\n        }\n    });\n    doc.addEventListener('touchstart', pointerDown);\n    doc.addEventListener('mousedown', pointerDown);\n};\nexport { startFocusVisible };\n"],"names":["ION_FOCUSED","FOCUS_KEYS","startFocusVisible","currentFocus","keyboardMode","doc","document","setFocus","elements","forEach","el","classList","remove","add","pointerDown","addEventListener","ev","includes","key","composedPath","toFocus","filter","contains","activeElement","body"],"sourceRoot":""}