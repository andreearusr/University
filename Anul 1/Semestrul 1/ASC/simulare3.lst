     1                                  bits 32
     2                                  
     3                                  global start
     4                                  extern exit,printf,scanf,fopen,fclose,fprintf
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import fprintf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 00000000                    n dd 0
    14 00000004 00000000                    a dd 0
    15 00000008 00000000                    suma dd 0
    16 0000000C 00000000                    contor dd 0
    17                                  
    18 00000010 6E3D20000A                  mesaj db "n= ",0,10
    19 00000015 6E723D20000A                mesaj2 db "nr= ",0,10
    20 0000001B 25752000                    format db "%u ",0
    21                                      
    22 0000001F 73696D756C61726533-         nume_fis db "simulare3.txt",0
    22 00000028 2E74787400         
    23 0000002D 7700                        mod_acces db "w",0
    24 0000002F FFFFFFFF                    descriptor_fis dd -1
    25                                      
    26                                  ; Sa se citeasca de la tastatura un nr N reprezentat pe un octet si apoi N nr intregi reprezentate pe un octet
    27                                  ; Programul va calcula suma acestor numere (S<256) si va scrie intr-un fisier pctetii de la 0 pana la S
    28                                  segment code use32 class=code
    29                                      start:
    30                                      
    31 00000000 68[2D000000]                push dword mod_acces
    32 00000005 68[1F000000]                push dword nume_fis
    33 0000000A FF15[00000000]              call [fopen]
    34 00000010 83C408                      add ESP,4*2
    35                                      
    36 00000013 83F800                      cmp EAX,0
    37 00000016 0F84C5000000                je final
    38                                      
    39 0000001C A3[2F000000]                mov [descriptor_fis],EAX
    40                                      
    41 00000021 68[10000000]                push dword mesaj
    42 00000026 FF15[00000000]              call [printf]
    43 0000002C 83C404                      add ESP,4*1
    44                                      
    45 0000002F 68[00000000]                push dword n
    46 00000034 68[1B000000]                push dword format
    47 00000039 FF15[00000000]              call [scanf]
    48 0000003F 83C408                      add ESP,4*2
    49                                      
    50                                      
    51 00000042 B900000000                  mov ECX,0
    52 00000047 8A0D[00000000]              mov CL,[n]
    53                                      
    54                                      repeta:
    55 0000004D 60                              pushad
    56                                          
    57 0000004E 68[15000000]                    push dword mesaj2
    58 00000053 FF15[00000000]                  call [printf]
    59 00000059 83C404                          add ESP,4*1
    60                                          
    61 0000005C 68[04000000]                    push dword a
    62 00000061 68[1B000000]                    push dword format
    63 00000066 FF15[00000000]                  call [scanf]
    64 0000006C 83C408                          add ESP,4*2
    65                                          
    66 0000006F A1[04000000]                    mov EAX,[a]
    67 00000074 660105[08000000]                add word[suma],AX
    68                                          
    69 0000007B 61                              popad
    70                                          
    71 0000007C E2CF                        loop repeta 
    72                                     
    73 0000007E FF35[08000000]              push dword [suma]
    74 00000084 68[1B000000]                push dword format
    75 00000089 FF15[00000000]              call [printf]
    76 0000008F 83C408                      add ESP,4*2
    77                                      
    78 00000092 B900000000                  mov ECX,0
    79 00000097 668B0D[08000000]            mov CX,[suma]
    80 0000009E 66C705[0C000000]00-         mov word[contor],0
    80 000000A6 00                 
    81                                      bucla:
    82 000000A7 60                              pushad
    83 000000A8 B800000000                      mov EAX,0
    84 000000AD 66A1[0C000000]                  mov AX,word[contor]
    85                                          
    86 000000B3 50                              push dword EAX
    87 000000B4 68[1B000000]                    push dword format
    88 000000B9 FF35[2F000000]                  push dword [descriptor_fis]
    89 000000BF FF15[00000000]                  call [fprintf]
    90 000000C5 83C40C                          add ESP,4*3
    91 000000C8 61                              popad
    92                                          
    93 000000C9 66FF05[0C000000]                inc word[contor] 
    94                                          
    95 000000D0 E2D5                        loop bucla
    96                                      
    97                                  
    98 000000D2 FF35[2F000000]              push dword [descriptor_fis]
    99 000000D8 FF15[00000000]              call [fclose]
   100 000000DE 83C404                      add ESP,4*1
   101                                      
   102                                      final:
   103                                      
   104 000000E1 6A00                        push dword 0
   105 000000E3 FF15[00000000]              call [exit]
   106                                      
   107                                      
