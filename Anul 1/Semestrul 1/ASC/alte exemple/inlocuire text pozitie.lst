     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  global start        
     3                                  
     4                                  
     5                                  extern exit,fopen,fclose,fprintf               
     6                                  import exit msvcrt.dll   
     7                                  import fopen msvcrt.dll
     8                                  import fclose msvcrt.dll   
     9                                  import fprintf msvcrt.dll      
    10                                  
    11                                  
    12                                  segment data use32 class=data
    13                                      ; Se dau un nume de fisier si un text. Textul contine litere mici si spatii. Sa se inlocuiasca toate literele de pe
    14                                      ;pozitiile pare cu numarul pozitiei. Sa se creeze un fisier cu numele dat si sa se scrie textul obtinut in fisier
    15                                      
    16 00000000 0A00                            zece dw 10
    17 00000002 646174652E74787400              nume_fisier db "date.txt",0
    18 0000000B 7700                            mod_acces db "w",0
    19 0000000D FFFFFFFF                        descriptor_fis dd -1
    20 00000011 416E61206D65726765-             text db "Ana merge la magazin",0
    20 0000001A 206C61206D6167617A-
    20 00000023 696E00             
    21                                          l equ $-text-1
    22 00000026 00<rept>                        text_prelucrat times 256 db 0
    23                                  
    24                                  
    25                                  segment code use32 class=code
    26                                      start:
    27                                          
    28 00000000 68[0B000000]                    push dword mod_acces
    29 00000005 68[02000000]                    push dword nume_fisier
    30 0000000A FF15[00000000]                  call[fopen]
    31 00000010 83C408                          add ESP,4*2
    32                                          
    33 00000013 83F800                          cmp EAX,0
    34 00000016 0F8480000000                    je final
    35 0000001C A3[0D000000]                    mov [descriptor_fis],EAX 
    36                                          
    37 00000021 BE[11000000]                    mov ESI,text
    38 00000026 BF[26000000]                    mov EDI, text_prelucrat
    39 0000002B B914000000                      mov ECX,l 
    40 00000030 FC                              cld 
    41 00000031 E369                            jecxz final 
    42                                          
    43                                          repeta:
    44 00000033 AC                                  lodsb
    45 00000034 3C20                                cmp AL, ' '
    46 00000036 743E                                je caz2 
    47 00000038 89F3                                mov EBX,ESI
    48 0000003A 81EB[11000000]                      sub EBX,text
    49 00000040 F7C314000000                        test EBX,l
    50 00000046 752E                                jnz caz2 
    51                                              caz1:
    52 00000048 51                                      push ECX
    53 00000049 B900000000                              mov ECX,0
    54                                                  repeta2:
    55 0000004E 41                                          inc ECX 
    56 0000004F 53                                          push EBX 
    57 00000050 6658                                        pop AX 
    58 00000052 665A                                        pop DX 
    59 00000054 66F735[00000000]                            div word[zece]
    60 0000005B BB00000000                                  mov EBX,0
    61 00000060 6689C3                                      mov BX,AX
    62 00000063 6683C230                                    add DX,'0'
    63 00000067 88D0                                        mov AL,DL
    64 00000069 50                                          push EAX 
    65 0000006A 83FB00                                      cmp EBX,0
    66 0000006D 75DF                                    jnz repeta2
    67                                                  repeta3:
    68 0000006F 58                                          pop EAX
    69 00000070 AA                                          stosb 
    70 00000071 E2FC                                    loop repeta3
    71 00000073 59                                      pop ECX 
    72 00000074 EB01                                jmp sf     
    73                                              caz2:
    74 00000076 AA                                      stosb
    75                                              sf:
    76 00000077 E2BA                            loop repeta 
    77                                          
    78 00000079 68[26000000]                    push dword text_prelucrat
    79 0000007E FF35[0D000000]                  push dword [descriptor_fis]
    80 00000084 FF15[00000000]                  call [fprintf]
    81 0000008A 83C408                          add ESP,4*2 
    82                                          
    83 0000008D FF35[0D000000]                  push dword [descriptor_fis]
    84 00000093 FF15[00000000]                  call[fclose]
    85 00000099 83C404                          add ESP,4*1
    86                                          
    87                                          final:
    88                                      
    89                                          ; exit(0)
    90 0000009C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    91 0000009E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
