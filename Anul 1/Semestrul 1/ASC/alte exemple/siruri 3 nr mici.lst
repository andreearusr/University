     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 010306020307                    s1 db 1,3,6,2,3,7
    14 00000006 060308010205                    s2 db 6,3,8,1,2,5
    15                                          l equ $-s1
    16 0000000C 00<rept>                        d times l db 0; 1,3,6,1,2,5
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B90C000000                      mov ECX,l
    22 00000005 BE00000000                      mov ESI,0
    23 0000000A E321                            jecxz sfarsit
    24                                          
    25                                          repeta:
    26 0000000C 8A86[00000000]                      mov AL,[s1+ESI]
    27 00000012 8AA6[06000000]                      mov AH,[s2+ESI]
    28 00000018 38E0                                cmp AL,AH
    29 0000001A 7708                                ja sir2
    30 0000001C 8886[0C000000]                      mov [d+ESI],AL
    31 00000022 EB06                                jmp sir1
    32                                              
    33                                              sir2:
    34 00000024 88A6[0C000000]                          mov [d+ESI],AH
    35                                              sir1:
    36 0000002A 46                                      inc ESI
    37 0000002B E2DF                            loop repeta
    38                                          sfarsit:
    39                                      
    40                                          ; exit(0)
    41 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
