     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,printf,scanf,fopen,fclose,fprintf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  import printf msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  import fopen msvcrt.dll
    14                                  import fclose msvcrt.dll
    15                                  import fprintf msvcrt.dll
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18 00000000 00<rept>                        nume_fisier times 31 db 0
    19 0000001F 7700                            mod_acces db "w",0
    20                                          
    21 00000021 FFFFFFFF                        descriptor_fis dd -1
    22 00000025 00<rept>                        text times 121 db 0
    23 0000009E 6E756D656C65206669-             mesajfisier db "numele fisierului= ",0
    23 000000A7 73696572756C75693D-
    23 000000B0 2000               
    24 000000B2 746578743D2000                  mesajtext db "text= ",0
    25 000000B9 257300                          format db "%s",0
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; Sa se citeasca de la tastatura un nume de fisier si un text. Sa se creeze un fisier cu numele dat in directorul
    31                                          ; curent si sa se scrie textul in acel fisier. Observatii: Numele de fisier este de maxim 30 de caractere.
    32                                          ; textul de maxim 120 de caractere
    33                                      
    34 00000000 68[9E000000]                    push dword mesajfisier
    35 00000005 FF15[00000000]                  call [printf]    ; afiseaza "numele fisierului= "
    36 0000000B 83C404                          add ESP,4*1 
    37                                          
    38 0000000E 68[00000000]                    push dword nume_fisier
    39 00000013 68[B9000000]                    push dword format   ; citeste numele fisierului de tip string
    40 00000018 FF15[00000000]                  call [scanf]
    41 0000001E 83C408                          add ESP,4*2
    42                                          
    43 00000021 68[B2000000]                    push dword mesajtext
    44 00000026 FF15[00000000]                  call[printf]    ; afiseaza "text= "
    45 0000002C 83C404                          add ESP,4*1
    46                                          
    47 0000002F 68[25000000]                    push dword text
    48 00000034 68[B9000000]                    push dword format
    49 00000039 FF15[00000000]                  call [scanf]     ; citeste textul de tip string
    50 0000003F 83C408                          add ESP,4*2
    51                                          
    52                                          ; apelam fopen(nume_fisier,mod_acces) pt a crea fisierul 
    53 00000042 68[1F000000]                    push dword mod_acces
    54 00000047 68[00000000]                    push dword nume_fisier
    55 0000004C FF15[00000000]                  call [fopen]
    56 00000052 83C408                          add ESP,4*2
    57                                          
    58 00000055 A3[21000000]                    mov [descriptor_fis],EAX
    59                                          
    60 0000005A 83F800                          cmp EAX,0
    61 0000005D 7423                            je final
    62                                          
    63                                          ;scriem textul in fisierul deschis cu fctia fprintf(descriptor_fis,text)
    64 0000005F 68[25000000]                    push dword text
    65 00000064 FF35[21000000]                  push dword [descriptor_fis]
    66 0000006A FF15[00000000]                  call [fprintf]
    67 00000070 83C408                          add ESP,4*2
    68                                          
    69                                          ;inchidem fisierul fclose(descriptor_fis)
    70 00000073 FF35[21000000]                  push dword [descriptor_fis]
    71 00000079 FF15[00000000]                  call[fclose]
    72 0000007F 83C404                          add ESP, 4*1
    73                                          
    74                                          final:
    75                                      
    76                                      
    77                                          ; exit(0)
    78 00000082 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    79 00000084 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
