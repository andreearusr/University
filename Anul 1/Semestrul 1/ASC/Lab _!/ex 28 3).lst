     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0700                        a dw 7
    14 00000002 1E00                        b dw 30
    15 00000004 3700                        c dw 55
    16 00000006 5000                        d dw 80
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:;... (d-c) + (b+b-c-a)+d
    21 00000000 66A1[06000000]                  mov AX,[d]; AX=d
    22 00000006 662B05[04000000]                sub AX,[c]; AX=d-c
    23                                          
    24 0000000D 668B1D[02000000]                mov BX,[b]; BX=b
    25 00000014 66031D[02000000]                add BX,[b]; BX=b+b
    26 0000001B 662B1D[04000000]                sub BX,[c]; BX= b+b-c
    27 00000022 662B1D[00000000]                sub BX,[a]; BX=b+b-c-a
    28                                          
    29 00000029 6601D8                          add AX,BX; AX=AX+BX=d-c+b+b-c-a
    30 0000002C 660305[06000000]                add AX,[d]; AX=AX+d=d-c+b+b-c-a+d 
    31                                          
    32                                      
    33                                          ; exit(0)
    34 00000033 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 00000035 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
