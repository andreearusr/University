     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 75                          B db 01110101b
    15 00000001 84A7                        A dw 1010011110000100b
    16 00000003 00                          C db 0
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ... sa se inlocuiasca bitii 0-3 ai octetului B
    22                                          ;       cu bitii 8-11 ai cuvantului A
    23                                         
    24 00000000 B200                           mov DL,0; in DL calculam rezultatul
    25 00000002 A0[00000000]                   mov AL,[B]; AL=0111 0101b
    26 00000007 24F0                           and AL, 11110000b; izolam bitii 4-7 ai lui B
    27 00000009 08C2                           or DL,AL; DL=0111 0000b
    28                                         
    29 0000000B 66A1[01000000]                 mov AX,[A]; AX=1010011110000100b
    30 00000011 6625000F                       and AX,0000111100000000b; izolam bitii 8-11 ai lui A
    31 00000015 B108                           mov CL,8
    32 00000017 66D3C8                         ror AX,CL; rotim 8 pozitii spre dreapta, AX=0000000000000111b
    33 0000001A 88C3                           mov BL,AL; BL=0000 0111b
    34 0000001C 08DA                           or DL,BL; DL=0111 0111b
    35 0000001E 8815[03000000]                 mov [C],DL; C=01110111b
    36                                         
    37                                          ; exit(0)
    38 00000024 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 00000026 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
